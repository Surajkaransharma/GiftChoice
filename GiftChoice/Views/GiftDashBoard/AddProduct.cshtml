
@{
    /**/

    /**/

    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<style>

    .box1 {
        inline-size: 150px !important;
        overflow-wrap: break-word !important;
    }
</style>

<script src="~/Angularjs/Admin.js"></script>
<div class="page-wrapper" ng-app="AdminApp" ng-controller="AdminController">
    <div class="page-content">
        <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
            <div class="breadcrumb-title pe-3">Product</div>
            <div class="ps-3">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0 p-0">
                        <li class="breadcrumb-item">
                            <a href="javascript:;"><i class="bx bx-home-alt"></i></a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">Form</li>
                    </ol>
                </nav>
            </div>

        </div>
        <div class="row">
            <div class="col-xl-12">

                <div class="card">
                    <div class="card-body p-4">

                        <form class="row g-3" enctype="multipart/form-data">
                            <div class="col-md-3" ng-init="GetMainCateData()">
                                <label for="input1" class="form-label">Select Main Category</label>

                                <select id="MainCate" class="form-select" ng-model="Product.MainCateId" onchange="angular.element(this).scope().MainCateKeyword(this.value)">
                                    <option ng-selected="true" value="-1">Select Main Category</option>
                                    <option ng-repeat="m in MainCateData" value="{{m.MainCateId}}">{{m.MTitle}}</option>
                                </select>


                            </div>
                            <div class="col-md-2" ng-init="GetLabelProduct()">
                                <label for="input1" class="form-label">Select Main Category</label>

                                <select id="LabelId" class="form-select" ng-model="Product.LabelId">
                                    <option ng-selected="true" value="">Select Label</option>
                                    <option ng-repeat="m in LabelProductData" value="{{m.LabelId}}">{{m.LTitle}}</option>
                                </select>


                            </div>
                            <div class="col-md-4">
                                <label for="input1" class="form-label">Product Title</label>
                                <input type="text" id="Producttitle" class="form-control" ng-model="Product.ProductTitle" placeholder="Product Title">
                            </div>
                            <div class="col-md-2">
                                <label for="input1" class="form-label">Label</label>
                                <input type="text" class="form-control" ng-model="Product.PLabel" id="" placeholder="Label">
                            </div>

                            @*<div class="col-md-2">
                                    <label for="input1" class="form-label">Priority</label>
                                    <input type="number" class="form-control" ng-model="Product.Priority" id="" placeholder="Priority">
                                </div>*@

                            <div class="col-md-2">
                                <label for="input1" class="form-label">Price</label>
                                <input type="number" class="form-control" ng-model="Product.Price" id="" placeholder="Price">
                            </div>
                            @*<div class="col-md-2">
                                    <label for="input1" class="form-label">See Video</label>
                                    <input type="text" class="form-control" ng-model="Product.VideoUrl" id="" placeholder="See Video">
                                </div>*@
                            <div class="col-md-2">
                                <label for="input1" class="form-label">See Video</label>
                                <input type="file" id="VideoData" class="form-control" upload-file="Product.VideoData">
                            </div>
                            <div class="col-md-2">
                                <label for="SameDay" class="form-label">Same Day Deliver</label>
                                <input type="checkbox" ng-model="Product.SameDay" id="SameDay" placeholder="">
                            </div>
                            <div ng-init="AddProductDetails()">

                                <div class="row g-3" ng-repeat="a in productDataArray">

                                    <div class="col-md-2" ng-init="GetProductSizeList($index)">
                                        <label for="input1" class="form-label">Size</label>
                                        <select id="P_Size" class="form-select" ng-model="a.SizeId" ng-options="q.SizeId as q.SizeTitle for q in a.SizeList"></select>
                                    </div>



                                    <div class="col-md-2">
                                        <label for="input1" class="form-label">Price</label>
                                        <input type="text" class="form-control" ng-model="a.Price" id="" placeholder="Price" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">
                                    </div>


                                    <div class="col-md-2">
                                        <div class="d-md-flex d-grid align-items-center gap-3" style="margin-top: 30px">
                                            <button type="button" ng-click="removeproductDataArraydata($index)" class="btn btn-primary px-4 mt-28"><i class="bx bx-trash"></i></button>

                                            <button ng-show="$last" type="button" id="Adbtn" ng-click="AddProductDetails()" class="btn btn-primary px-4 mt-28"><i class="bx bx-plus"></i></button>
                                        </div>
                                    </div>


                                </div>
                            </div>
                            <div class="col-md-12" ng-init="GetKeywordData()">
                                <label for="input1" class="form-label">Select Keyword</label>
                                <div class="" id="check_box">
                                    <label class="checkbox-wrapper" ng-repeat="k in KeywordList">
                                        <input type="checkbox" id="Keyword_{{k.KeywordId}}" class="checkbox-input" value="{{k.KeywordId}}" ng-model="k.Selected" ng-checked="" />
                                        <span class="checkbox-tile">
                                            <span class="checkbox-label">{{k.Keyword}}</span>
                                        </span>
                                    </label>

                                </div>
                            </div>
                            @*<div class="col-md-12" ng-init="GetSizeData()">
                                    <label for="input1" class="form-label">Select Size</label>
                                    <div class="" id="check_box">
                                        <label class="checkbox-wrapper" ng-repeat="s in SizeList">
                                            <input type="checkbox" id="Size_{{s.SizeId}}" class="checkbox-Size" value="{{s.SizeId}}" ng-model="s.Selected" ng-checked="" />
                                            <span class="checkbox-tile">
                                                <span class="checkbox-label">{{s.SizeTitle}}</span>
                                            </span>
                                        </label>

                                    </div>
                                </div>*@
                            <div class="col-md-12">
                                <label for="input1" class="form-label">Description</label>
                                <textarea id="TableDesc" class="form-control" rows="6" cols="4" ng-model="Product.PDesc"></textarea>
                            </div>
                            <div class="col-md-12">

                                <label for="input1" class="form-label">Table Description</label>
                                <textarea class="ckeditor" id="ckeditor"></textarea>
                            </div>
                            <div class="col-md-2">
                                <label for="input1" class="form-label">Image 1</label>

                                <input type="file" class="form-control image-input" onchange="angular.element(this).scope().previewImage1(0)" upload-file="Product.Image1">
                                <img class="image-preview" id="image-preview-0" alt="Image Preview">

                            </div>

                            <div class="col-md-2">
                                <label for="input1" class="form-label">Image 2</label>
                                <input type="file" class="form-control" upload-file="Product.Image2" id="">
                            </div>

                            <div class="col-md-2">
                                <label for="input1" class="form-label">Image 3</label>
                                <input type="file" class="form-control" upload-file="Product.Image3" id="">
                            </div>
                            <div class="col-md-2">
                                <label for="input1" class="form-label">Image 4</label>
                                <input type="file" class="form-control" upload-file="Product.Image4" id="">
                            </div>
                            <div class="col-md-2">
                                <label for="input1" class="form-label">Image 5</label>
                                <input type="file" class="form-control" upload-file="Product.Image5" id="">
                            </div>
                            <div class="col-md-12">
                                <div class="d-md-flex d-grid align-items-center gap-3">
                                    <button type="button" id="btn" ng-click="SubmitProduct()" class="btn btn-primary px-4">Submit</button>
                                    <button type="button" id="edbtn" style="display: none" ng-click="UpdateProductData()" class="btn btn-primary px-4">Update</button>
                                    <button type="button" class="btn btn-light px-4" onClick="refreshPage()">Reset</button>
                                </div>
                            </div>
                            <div class="col-md-12">

                                <div id="drop-zone">Drag & Drop Image Here</div>
                                <style>
                                    #drop-zone {
                                        width: 300px;
                                        height: 200px;
                                        border: 2px dashed #ccc;
                                        border-radius: 5px;
                                        text-align: center;
                                        padding: 20px;
                                        margin: 20px auto;
                                    }

                                        #drop-zone.hover {
                                            border-color: #333;
                                        }

                                    #image-preview {
                                        max-width: 100%;
                                        max-height: 100%;
                                        margin-bottom: 10px;
                                    }
                                </style>
                                <script>
                                    const dropZone = document.getElementById('drop-zone');
                                    let imagePreview = null;
                                    debugger
                                    // Prevent default behavior when dropping files
                                    dropZone.addEventListener('dragover', (e) => {
                                        e.preventDefault();
                                        dropZone.classList.add('hover');
                                    });

                                    //dropZone.addEventListener('dragleave', () => {
                                    //    dropZone.classList.remove('hover');
                                    //});

                                    // Handle file drop
                                    dropZone.addEventListener('drop', (e) => {
                                        e.preventDefault();
                                        dropZone.classList.remove('hover');

                                        const file = e.dataTransfer.files[0];

                                        if (file.type.startsWith('image/')) {
                                            const reader = new FileReader();

                                            reader.onload = () => {
                                                // Remove existing image and button
                                                if (imagePreview) {
                                                    dropZone.removeChild(imagePreview);
                                                    dropZone.removeChild(removeButton);
                                                }

                                                const image = new Image();
                                                image.src = reader.result;
                                                image.id = 'image-preview';
                                                dropZone.appendChild(image);
                                                imagePreview = image;

                                                // Add remove image button
                                                const removeButton = document.createElement('button');
                                                removeButton.textContent = 'Remove Image';
                                                removeButton.addEventListener('click', () => {
                                                    dropZone.removeChild(removeButton);
                                                    dropZone.removeChild(imagePreview);
                                                    imagePreview = null;
                                                });
                                                dropZone.appendChild(removeButton);
                                            };

                                            reader.readAsDataURL(file);
                                        } else {
                                            alert('Please drop an image file.');
                                        }
                                    });
                                </script>

                            </div>
                        </form>
                    </div>
                </div>

            </div>
            <div class="col-xl-12">
                <div class="card">
                    <div class="card-body">
                        <div class="d-lg-flex align-items-center mb-4 gap-3">
                            @*<div class="position-relative">
                                    <input type="text" class="form-control ps-5 radius-30" ng-model="search" placeholder="Search here...">
                                    <span class="position-absolute top-50 product-show translate-middle-y"><i class="bx bx-search"></i></span>
                                </div>*@
                            @*  <div class="ms-auto"><a href="javascript:;" class="btn btn-primary radius-30 mt-2 mt-lg-0" data-bs-toggle="modal" data-bs-target="#createcompany"><i class="bx bxs-plus-square"></i>Add New Company</a></div>*@

                            <div class="col-md-3" ng-init="GetMainCateData()">
                                <label for="input1" class="form-label">Select Main Category</label>

                                <select id="MainCate" class="form-select" onchange="angular.element(this).scope().GetProduct(this.value)">
                                    <option ng-selected="true" value="-1">Select Main Category</option>
                                    <option value="-2">All Product</option>
                                    <option ng-repeat="m in MainCateData" value="{{m.MainCateId}}">{{m.MTitle}}</option>
                                </select>


                            </div>



                        </div>
                        <div class="table-responsive" ng-show="ProductData.length>0">
                            <table class="table mb-0 table-bordered">
                                <thead class="table-light">
                                    <tr>
                                        <th>S.No.</th>
                                        <th class="box1">Product Title</th>
                                        <th class="box1">Main Category Name</th>
                                        <th class="box1">Label Product</th>

                                        <th>Label</th>
                                        <th>Price</th>
                                        <th>Priority</th>
                                        <th>Keywords</th>
                                        <th>Size</th>
                                        <th>Image</th>
                                        <th>Active</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="m in ProductData">
                                        <td>{{$index+1}}</td>
                                        <td style="white-space:normal" class="box1">{{m.ProductTitle}}</td>
                                        <td style="white-space:normal" class="box1">{{m.Maincate}}</td>
                                        <td style="white-space:normal" class="box1">{{m.labelTitle}}</td>

                                        <td>{{m.PLabel}}</td>
                                        <td>{{m.Price}}</td>
                                        <td>{{m.Priority}}</td>
                                        <td><span ng-repeat="n in m.Submenu">{{n.SubmenuTitle}},<br /></span></td>
                                        <td>
                                            <table class="table table-bordered">
                                                <tr>
                                                    <td>Price</td>
                                                    <td>Size</td>

                                                </tr>
                                                <tr ng-repeat="a in m.productDataArray">
                                                    <td>{{a.Price}}</td>
                                                    <td>{{a.ProductSize}}</td>

                                                </tr>

                                                @*<span ng-repeat="n in m.PSizeList">
                                                        {{n.SizeTitle}},<br />

                                                    </span>*@
                                            </table>
                                            @*<span ng-repeat="n in m.PSizeList">{{n.SizeTitle}},<br /></span>*@
                                        </td>
                                        <td><span ng-repeat="i in m.ProductImage"><img src="~/images/ProductImg/{{i}}" width="150px"><br /></span> </td>
                                        <td><a ng-click="ProductActiveDeActive(m.ProductId)"> <span class="badge {{m.Active==1? 'bg-success' : 'bg-danger'}}">{{m.Active==1?'Active':'Deactive'}}</span></a> </td>
                                        <td><a><i class="bx bxs-pencil" ng-click="GetProductbyid($index)"></i></a></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/assets/ckeditor/ckeditor.js"></script>




@*<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Drag & Drop Image Uploader</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <style>
        #drop-zone {
            width: 300px;
            height: 200px;
            border: 2px dashed #ccc;
            margin: 0 auto;
            text-align: center;
            padding: 20px;
        }

            #drop-zone p {
                margin-bottom: 10px;
            }

        #image-input {
            display: none;
        }

        #preview {
            width: 100%;
            max-height: 150px;
            object-fit: cover;
            margin-bottom: 10px;
        }

        #remove-image {
            background-color: #ccc;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            opacity: 0.5;
            transition: opacity 0.2s ease;
        }

            #remove-image:hover {
                opacity: 1;
            }
    </style>
    <div id="drop-zone">
        <p>Drag & drop your image here or click to browse</p>
        <input type="file" id="image-input" accept="image/*">
        <img id="preview" src="" alt="Image Preview">
        <button id="remove-image" disabled>Remove Image</button>
    </div>
    <button id="submit">submit</button>

    <script src="script.js"></script>
    <script>
        const dropZone = document.getElementById('drop-zone');
        const imageInput = document.getElementById('image-input');
        const preview = document.getElementById('preview');
        const submit = document.getElementById('submit');

        const removeButton = document.getElementById('remove-image');

        // Allow drag and drop
        dropZone.addEventListener('dragover', (event) => {
            event.preventDefault();
            dropZone.classList.add('dragover');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('dragover');
        });

        // dropZone.addEventListener('drop', function (event) {
        //         // Prevent Default Behavior
        //         event.preventDefault();

        //         // Remove Class (drop-zoon--over) from (drop-zoon)
        //         dropZoon.classList.remove('dragover');

        //         // Select The Dropped File
        //         const file = event.dataTransfer.files[0];

        //         // Call Function uploadFile(), And Send To Her The Dropped File :)
        //         uploadFile(file);
        //     });

        dropZone.addEventListener('drop', (event) => {
            event.preventDefault();
            dropZone.classList.remove('dragover');

            const file = event.dataTransfer.files[0];
            if (!file || !file.type.startsWith('image/')) {
                alert('Please drag and drop an image file.');
                return;
            }
            uploadFile(file);


        });
        dropZone.addEventListener('click', function (event) {
            // Click The (fileInput)
            imageInput.click();
        });

        // When (fileInput) has (change) Event
        imageInput.addEventListener('change', function (event) {
            // Select The Chosen File
            const file = event.target.files[0];

            // Call Function uploadFile(), And Send To Her The Chosen File :)
            uploadFile(file);
        });

        function uploadFile(file) {
            debugger
            const reader = new FileReader();
            reader.onload = (e) => {
                preview.src = e.target.result;
                debugger
                //   imageInput.value = file.name; // Set filename in input for potential submission
                debugger
                removeButton.disabled = false;
                removeButton.style.opacity = 1;
            };
            reader.readAsDataURL(file);
        }
        // Handle image selection from file input
        // imageInput.addEventListener('change', (event) => {

        //   const file = event.target.files[0];
        //   if (!file || !file.type.startsWith('image/')) {
        //     alert('Please select an image file.');
        //     return;
        //   }

        //   const reader = new FileReader();
        //   reader.onload = (e) => {
        //     preview.src = e.target.result;
        //     removeButton.disabled = false;
        //     removeButton.style.opacity = 1;
        //   };
        //   reader.readAsDataURL(file);
        // });

        // Remove image and reset
        removeButton.addEventListener('click', () => {
            preview.src = '';
            imageInput.value = '';
            removeButton.disabled = true;
            removeButton.style.opacity = 0.5;
        });

        submit.addEventListener('click', () => {
            debugger
            const file = imageInput.files[0];
            if (!file || !file.type.startsWith('image/')) {
                alert('Please select an image file.');
                return;
            }
            debugger
            const formData = new FormData();
            formData.append('image', file);

            // Send the FormData to your server using AJAX or Fetch API
            // Replace 'YOUR_SERVER_URL' with the actual URL of your server endpoint
            //   fetch('YOUR_SERVER_URL', {
            //     method: 'POST',
            //     body: formData
            //   })
            //     .then(response => {
            //       // Handle successful upload response
            //       console.log('Image uploaded successfully!');
            //     })
            //     .catch(error => {
            //       // Handle upload error
            //       console.error('Error uploading image:', error);
            //     });
        })
    </script>
</body>
</html>*@
